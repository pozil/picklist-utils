# Unique name for this workflow
name: CI

# Definition when the workflow should run
on:
    workflow_dispatch:
    push:
        branches:
            - main
        paths-ignore:
            - 'sfdx-project.json'
            - 'README.md'

# Jobs to be executed
jobs:
    scratch-org-test:
        runs-on: ubuntu-latest
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              shell: bash
              run: echo ${{ secrets.DEVHUB_SFDX_URL}} > ./DEVHUB_SFDX_URL.txt

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: sfdx auth:sfdxurl:store -f ./DEVHUB_SFDX_URL.txt -a devhub -d

            # Create scratch org
            - name: 'Create scratch org'
              run: sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -s -d 1

            # Deploy source to scratch org
            - name: 'Push source to scratch org'
              run: sfdx force:source:push

            # Run Apex tests in scratch org
            - name: 'Run Apex tests'
              run: sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20

            # Upload code coverage data
            - name: 'Upload code coverage for Apex to Codecov.io'
              uses: codecov/codecov-action@v1

            # Housekeeping
            - name: 'Delete scratch org'
              if: always()
              run: sfdx force:org:delete -p -u scratch-org

    trigger-packaging:
        runs-on: ubuntu-latest
        needs: scratch-org-test
        steps:
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            # Check for package changes using git diff and looking for 'src' folder
            - name: 'Check for package changes'
              id: checkForChanges
              run: |
                  git fetch origin ${{ github.event.before }} --depth=1
                  changedPaths=$( git diff-tree --name-only ${{ github.event.before }} $GITHUB_SHA )
                  set +e
                  hasChanges='false'
                  if [ $(echo "$changedPaths" | grep -c '^src') == 1 ]; then
                      hasChanges='true'
                  fi
                  echo "::set-output name=hasChanges::$hasChanges"

            # Trigger packaging workflow if needed
            - name: 'Trigger packaging workflow if needed'
              uses: peter-evans/repository-dispatch@v1.1.3
              if: ${{ steps.checkForChanges.outputs.hasChanges == 'true' }}
              with:
                  token: ${{ secrets.REPO_ACCESS_TOKEN }}
                  event-type: start-packaging
                  client-payload: '{ "ref": "${{ github.ref }}", "sha": "${{ github.sha }}" }'
